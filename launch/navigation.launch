<launch>
	
	<master auto="start"/>
	
	<!-- create_circles_asus_xtion_pro create_circles_kinect kobuki_hexagons_astra kobuki_hexagons_asus_xtion_pro kobuki_hexagons_asus_xtion_pro kobuki_hexagons_kinect kobuki_hexagons_r200 roomba_circles_asus_xtion_pro roomba_circles_kinect -->
	<arg name="base"       default="kobuki"/>
	<arg name="stacks"     default="hexagons"/>  
	<arg name="3d_sensor"  default="astra"/>  

	<!-- simulation time -->
	<param name="/use_sim_time" value="true" />
	
	<!-- Name of the map to use and initial position -->
	<arg name="map_file"       default="$(find second_project)/stage/clean.yaml"/>
	<arg name="world_file"     default="$(find second_project)/stage/clean.world"/>
	<arg name="initial_pose_x" default="0.0"/>
	<arg name="initial_pose_y" default="0.0"/>
	<arg name="initial_pose_a" default="0.0"/>
	<arg name="odom_frame_id"   default="odom"/>
	<arg name="global_frame_id" default="map"/>	
	
	<!-- waypoints directory -->
	<param name="/navigation/waypoints_dir" value="$(find second_project)/waypoints.csv" /> 
	
	<!-- Run nodes -->
	<node pkg="second_project" type="navigation" name="navigation" output="screen" />
	
	<!-- static tf -->
	<node pkg="tf" type="static_transform_publisher" name="front_left" args="0.3 0.2 0.0 0.0 0.0 0.0 base_link fl 100" />
	<node pkg="tf" type="static_transform_publisher" name="front_right" args="0.3 -0.2 0.0 0.0 0.0 0.0 base_link fr 100" />
	<node pkg="tf" type="static_transform_publisher" name="rear_right" args="-0.3 -0.2 0.0 0.0 0.0 0.0 base_link rr 100" />
	<node pkg="tf" type="static_transform_publisher" name="rear_left" args="-0.3 0.2 0.0 0.0 0.0 0.0 base_link rl 100" />
 	
 	<!-- Run the map server -->
	<node name="map_server" pkg="map_server" type="map_server" args="$(find second_project)/stage/clean.yaml"/>
	
	<!--  *** Navigation  ***  -->
	<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
		<rosparam file="$(find second_project)/cfg/costmap_common_params.yaml" command="load" ns="global_costmap" />
		<rosparam file="$(find second_project)/cfg/costmap_common_params.yaml" command="load" ns="local_costmap" />   
		<rosparam file="$(find second_project)/cfg/local_costmap_params.yaml" command="load" />   
		<rosparam file="$(find second_project)/cfg/global_costmap_params.yaml" command="load" />
		<rosparam file="$(find second_project)/cfg/base_local_planner_params.yaml" command="load" />
		<rosparam file="$(find second_project)/cfg/move_base_params.yaml" command="load" />
		<param name="clearing_rotation_allowed" value="true"/> 
	</node>

	<!-- Run stage_ros -->
	<node pkg="stage_ros" type="stageros" name="stageros" args="$(find second_project)/stage/clean.world">
		<param name="base_watchdog_timeout" value="0.5"/>
		<remap from="base_scan" to="scan"/>
	</node>
	
	<!--  ****** amcl *****  -->
	<include file="$(find second_project)/launch/amcl.launch.xml">
		<arg name="scan_topic" value="scan"/>
		<arg name="use_map_topic" value="true"/>
		<arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
		<arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
		<arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
	</include>
	
	<!-- Run RViz -->
	<node pkg="rviz" type="rviz" name="rviz" args="-d $(find second_project)/config_nav.rviz" />
	
</launch>
